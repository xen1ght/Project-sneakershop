document.addEventListener("DOMContentLoaded", () => {
  const addSneakerForm = document.getElementById("addSneakerForm");
  const ordersContainer = document.getElementById("ordersContainer");

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫—Ä–æ—Å—Å–æ–≤–æ–∫
  addSneakerForm.addEventListener("submit", async (e) => {
    e.preventDefault();

    const data = {
  sneakersName: document.getElementById("sneakerName").value,
  countOfSneakers: parseInt(document.getElementById("sneakerCount").value),
  sumSneakers: parseInt(document.getElementById("sneakerPrice").value)
};
  console.log("üì¶ –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:", data);



    try {
      const res = await fetch("http://127.0.0.1:8000/api/sneakers/add", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(data)

      });
       const resultText = await res.text(); 
    console.log("üì¨ –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", resultText);


      if (res.ok) {
        alert("‚úÖ –ö—Ä–æ—Å—Å–æ–≤–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã");
        addSneakerForm.reset();
      } else {
        alert("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏.");
      }
    } catch (err) {
      console.error(err);
      alert("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.");
    }
  });

  async function loadOrders() {
    try {
      const res = await fetch("http://127.0.0.1:8000/api/orders/all");
      const orders = await res.json();

      if (orders.length === 0) {
        ordersContainer.innerHTML = "<p>–ù–µ—Ç –∑–∞–∫–∞–∑–æ–≤.</p>";
        return;
      }

      let html = `<table class="table table-bordered"><thead><tr>
        <th>ID</th><th>–ö–ª–∏–µ–Ω—Ç</th><th>–ö—Ä–æ—Å—Å–æ–≤–∫–∏</th><th>–°—Ç–∞—Ç—É—Å</th><th>–ò–∑–º–µ–Ω–∏—Ç—å</th></tr></thead><tbody>`;

      orders.forEach(order => {
        html += `
          <tr>
            <td>${order.id}</td>
            <td>${order.clientName}</td>
            <td>${order.nameAllsneakers}</td>
            <td>
              <select data-id="${order.id}" class="form-select order-status">
                <option ${order.status === '–ó–∞–∫–∞–∑ –ø–æ—Å—Ç—É–ø–∏–ª' ? 'selected' : ''}>–ó–∞–∫–∞–∑ –ø–æ—Å—Ç—É–ø–∏–ª</option>
                <option ${order.status === '–°–±–æ—Ä–∫–∞ –∑–∞–∫–∞–∑–∞' ? 'selected' : ''}>–°–±–æ—Ä–∫–∞ –∑–∞–∫–∞–∑–∞</option>
                <option ${order.status === '–ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω' ? 'selected' : ''}>–ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω</option>
                <option ${order.status === '–ó–∞–≤–µ—Ä—à—ë–Ω' ? 'selected' : ''}>–ó–∞–≤–µ—Ä—à—ë–Ω</option>
              </select>
            </td>
            <td><button class="btn btn-primary btn-sm update-status" data-id="${order.id}">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button></td>
          </tr>`;
      });

      html += "</tbody></table>";
      ordersContainer.innerHTML = html;

      document.querySelectorAll(".update-status").forEach(btn => {
        btn.addEventListener("click", async () => {
          const id = btn.dataset.id;
          const newStatus = document.querySelector(`select[data-id="${id}"]`).value;

          try {
            const response = await fetch(`http://127.0.0.1:8000/api/orders/update-status/${id}?status=${encodeURIComponent(newStatus)}`, {
              method: "PUT"
            });

            if (response.ok) {
              alert("‚úÖ –°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª—ë–Ω");
              loadOrders(); // –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞
            } else {
              alert("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å");
            }
          } catch (err) {
            console.error(err);
            alert("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞");
          }
        });
      });

    } catch (err) {
      console.error(err);
      ordersContainer.innerHTML = "<p class='text-danger'>–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞–∫–∞–∑–æ–≤.</p>";
    }
  }

  loadOrders();
});
